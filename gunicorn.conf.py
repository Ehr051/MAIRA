# Configuraci√≥n de Gunicorn para Render.com
# Optimizada para Socket.IO y aplicaciones Flask pesadas
# Fix: Python 3.13 + gevent compatibility + RENDIMIENTO OPTIMIZADO

import os
import multiprocessing

# Configuraci√≥n del servidor
bind = f"0.0.0.0:{os.getenv('PORT', '10000')}"
workers = 1  # Solo 1 worker para evitar problemas de sesi√≥n con Socket.IO
worker_class = "sync"  # Worker est√°ndar compatible con todas las versiones
worker_connections = 200  # ‚úÖ Aumentado de 100 a 200

# Timeouts cr√≠ticos (optimizados para rendimiento)
timeout = 180  # ‚úÖ Reducido de 300 a 180 (3 minutos)
keepalive = 60  # ‚úÖ Aumentado de 30 a 60 segundos
graceful_timeout = 90  # ‚úÖ Reducido de 120 a 90 segundos

# Configuraci√≥n de memoria y procesos (optimizada)
max_requests = 800  # ‚úÖ Aumentado de 500 a 800
max_requests_jitter = 50
preload_app = True

# Logs
accesslog = "-"
errorlog = "-"
loglevel = "info"
access_log_format = '%(h)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" in %(D)s¬µs'

# Configuraci√≥n espec√≠fica para Socket.IO
worker_tmp_dir = "/dev/shm"  # Usar memoria compartida si est√° disponible

# Configuraci√≥n de se√±ales para Socket.IO
def on_starting(server):
    server.log.info("üöÄ MAIRA Server starting with Socket.IO support...")

def on_reload(server):
    server.log.info("üîÑ MAIRA Server reloading...")

def when_ready(server):
    server.log.info("‚úÖ MAIRA Server ready to accept connections")

def worker_abort(worker):
    worker.log.info(f"‚ö†Ô∏è  Worker {worker.pid} aborted - Socket.IO sessions may be lost")
