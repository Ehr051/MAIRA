#!/bin/bash

# üîß SCRIPT PARA PREPARAR MINI-TILES
# 
# Este script toma los tiles actuales y los re-corta en piezas m√°s peque√±as
# compatibles con el l√≠mite de GitHub de 100MB

echo "üöÄ PREPARANDO MINI-TILES PARA GITHUB"
echo "======================================"

# Configuraci√≥n
BASE_DIR="/Users/mac/Documents/GitHub/MAIRA_git"
PROVINCIAS_DIR="$BASE_DIR/tiles_por_provincias"
OUTPUT_DIR="$BASE_DIR/mini_tiles_github"
TEMP_DIR="/tmp/maira_tiles_temp"

# Crear directorios
mkdir -p "$OUTPUT_DIR"
mkdir -p "$TEMP_DIR"

echo "üìÅ Directorios:"
echo "   Provincias JSON: $PROVINCIAS_DIR"
echo "   Salida: $OUTPUT_DIR"
echo "   Temporal: $TEMP_DIR"
echo ""

# Verificar si tenemos los JSON de provincias
if [ ! -d "$PROVINCIAS_DIR" ]; then
    echo "‚ùå No se encontr√≥ directorio de provincias"
    exit 1
fi

# Contar archivos de altimetr√≠a
altimetria_count=$(find "$PROVINCIAS_DIR" -name "altimetria_*.json" | wc -l)
vegetacion_count=$(find "$PROVINCIAS_DIR" -name "vegetacion_*.json" | wc -l)

echo "üìä Archivos encontrados:"
echo "   üóª Altimetr√≠a: $altimetria_count provincias"
echo "   üåø Vegetaci√≥n: $vegetacion_count provincias"
echo ""

# Funci√≥n para estimar tama√±o por provincia
estimar_tiles_por_provincia() {
    local json_file="$1"
    local provincia=$(basename "$json_file" .json | sed 's/altimetria_//')
    
    if [ -f "$json_file" ]; then
        local tile_count=$(jq '.tiles | length' "$json_file" 2>/dev/null || echo "0")
        echo "   üì¶ $provincia: $tile_count tiles"
        
        # Estimar cu√°ntos mini-tiles ser√≠an necesarios (aprox 25-50 tiles por archivo)
        local estimated_files=$((($tile_count + 25) / 25))
        echo "      ‚Üí Estimado: $estimated_files archivos TAR (~${estimated_files}x45MB = $((estimated_files * 45))MB total)"
    fi
}

echo "üìà Estimaci√≥n de divisi√≥n:"
for json_file in "$PROVINCIAS_DIR"/altimetria_*.json; do
    if [ -f "$json_file" ]; then
        estimar_tiles_por_provincia "$json_file"
    fi
done

echo ""
echo "üí° ESTRATEGIA DE MINI-TILES:"
echo "   ‚Ä¢ Dividir cada provincia en archivos de ~45MB m√°ximo"
echo "   ‚Ä¢ Cada archivo contendr√° ~25-50 tiles individuales"
echo "   ‚Ä¢ Total estimado: ~20-30 archivos TAR para toda Argentina"
echo "   ‚Ä¢ Todos compatibles con GitHub (< 100MB)"

echo ""
echo "üîÑ PASOS SIGUIENTES:"
echo "   1. Extraer tiles originales desde altimetria_tiles.tar.gz"
echo "   2. Ejecutar script de divisi√≥n por mini-tiles"
echo "   3. Crear Release tiles-v3.0 con archivos peque√±os"
echo "   4. Actualizar sistema para cargar mini-tiles bajo demanda"

echo ""
echo "üöÄ ¬øQuieres continuar con la extracci√≥n de tiles originales?"
echo "   Esto crear√° archivos temporales para el procesamiento."

read -p "Continuar? (y/n): " -n 1 -r
echo ""

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üîÑ Buscando archivo altimetria_tiles.tar.gz..."
    
    # Buscar el archivo TAR original
    TAR_FILE=$(find . -name "altimetria_tiles.tar.gz" 2>/dev/null | head -1)
    
    if [ -n "$TAR_FILE" ]; then
        echo "‚úÖ Encontrado: $TAR_FILE"
        echo "üì¶ Extrayendo en $TEMP_DIR..."
        
        tar -xzf "$TAR_FILE" -C "$TEMP_DIR" 2>/dev/null && \
        echo "‚úÖ Extracci√≥n completada" || \
        echo "‚ùå Error en extracci√≥n"
        
        echo "üìä Archivos extra√≠dos:"
        find "$TEMP_DIR" -name "*.tif" | wc -l | xargs echo "   TIF files:"
        
        echo ""
        echo "üéØ Ahora puedes ejecutar:"
        echo "   python3 crear_mini_tiles.py"
        echo "   (Modificar la ruta TIF en el script: $TEMP_DIR)"
        
    else
        echo "‚ùå No se encontr√≥ altimetria_tiles.tar.gz"
        echo "üí° Desc√°rgalo desde GitHub Release tiles-v1.1:"
        echo "   wget https://github.com/Ehr051/MAIRA/releases/download/tiles-v1.1/altimetria_tiles.tar.gz"
    fi
else
    echo "‚è∏Ô∏è  Operaci√≥n cancelada"
fi

echo ""
echo "üìã RESUMEN:"
echo "   El sistema de mini-tiles solucionar√° el problema de tama√±o"
echo "   permitiendo subir toda Argentina en archivos < 50MB cada uno"
echo "   ¬°Tu aplicaci√≥n podr√° cargar solo las regiones necesarias!"
