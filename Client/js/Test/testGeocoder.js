// üîß DIAGN√ìSTICO GEOCODER EN PLANEAMIENTO.HTML
console.log('üöÄ Iniciando diagn√≥stico del geocoder...');

// 1. Verificar dependencias
console.log('üìã Estado de dependencias:');
console.log('  - Leaflet:', typeof L !== 'undefined' ? '‚úÖ' : '‚ùå');
console.log('  - L.Control:', typeof L !== 'undefined' && L.Control ? '‚úÖ' : '‚ùå'); 
console.log('  - L.Control.Geocoder:', typeof L !== 'undefined' && L.Control && L.Control.Geocoder ? '‚úÖ' : '‚ùå');
console.log('  - Nominatim:', typeof L !== 'undefined' && L.Control && L.Control.Geocoder && L.Control.Geocoder.nominatim ? '‚úÖ' : '‚ùå');

// 2. Verificar elementos del DOM
console.log('üìã Estado de elementos DOM:');
console.log('  - Input b√∫squeda:', document.getElementById('busquedaLugar') ? '‚úÖ' : '‚ùå');
console.log('  - Bot√≥n b√∫squeda:', document.getElementById('btnBuscarLugar') ? '‚úÖ' : '‚ùå');
console.log('  - Resultados:', document.getElementById('resultadosBusquedaLugar') ? '‚úÖ' : '‚ùå');
console.log('  - Mapa global:', window.mapa ? '‚úÖ' : '‚ùå');

// 3. Test directo del geocoder
if (typeof L !== 'undefined' && L.Control && L.Control.Geocoder) {
    console.log('üß™ Probando geocoder directamente...');
    
    try {
        const testGeocoder = L.Control.Geocoder.nominatim({
            serviceUrl: 'https://nominatim.openstreetmap.org/'
        });
        
        console.log('‚úÖ Geocoder creado exitosamente');
        
        // Test de b√∫squeda
        testGeocoder.geocode('Buenos Aires', function(results) {
            console.log('üéØ Resultados de test:', results);
            if (results && results.length > 0) {
                console.log('‚úÖ Geocoder funciona correctamente!');
                console.log('üìç Primer resultado:', {
                    name: results[0].name,
                    center: results[0].center,
                    bbox: results[0].bbox
                });
            } else {
                console.log('‚ö†Ô∏è No se obtuvieron resultados');
            }
        }, function(error) {
            console.error('‚ùå Error en test de geocoder:', error);
        });
        
    } catch (error) {
        console.error('‚ùå Error creando geocoder:', error);
    }
} else {
    console.error('‚ùå Geocoder no disponible para test');
}

// 4. Verificar eventos en el input
const inputBusqueda = document.getElementById('busquedaLugar');
if (inputBusqueda) {
    console.log('üîç Verificando eventos del input...');
    
    // Clonar y reemplazar para limpiar eventos
    const nuevoInput = inputBusqueda.cloneNode(true);
    inputBusqueda.parentNode.replaceChild(nuevoInput, inputBusqueda);
    
    // Agregar event listener de prueba
    nuevoInput.addEventListener('input', function() {
        console.log('‚å®Ô∏è Input detectado:', this.value);
        if (this.value.length > 2) {
            console.log('üîÑ Deber√≠an empezar las sugerencias...');
        }
    });
    
    console.log('‚úÖ Event listener de test agregado');
} else {
    console.error('‚ùå Input de b√∫squeda no encontrado');
}

// 5. Funci√≥n de test manual
window.testGeocoderManual = function(texto) {
    console.log('üß™ Test manual para:', texto);
    
    if (typeof L !== 'undefined' && L.Control && L.Control.Geocoder) {
        const geocoder = L.Control.Geocoder.nominatim({
            serviceUrl: 'https://nominatim.openstreetmap.org/'
        });
        
        geocoder.geocode(texto, function(results) {
            console.log('üìç Resultados manual:', results);
            const resultadosDiv = document.getElementById('resultadosBusquedaLugar');
            if (resultadosDiv) {
                resultadosDiv.innerHTML = '';
                if (results && results.length > 0) {
                    results.slice(0, 5).forEach(function(result, index) {
                        const li = document.createElement('li');
                        li.textContent = result.name || result.display_name || `Resultado ${index + 1}`;
                        li.style.cursor = 'pointer';
                        li.style.padding = '8px';
                        li.style.borderBottom = '1px solid #eee';
                        resultadosDiv.appendChild(li);
                    });
                } else {
                    resultadosDiv.innerHTML = '<li>No se encontraron resultados</li>';
                }
            }
        }, function(error) {
            console.error('‚ùå Error en test manual:', error);
        });
    } else {
        console.error('‚ùå Geocoder no disponible para test manual');
    }
};

console.log('üéØ Para probar manualmente, ejecuta: testGeocoderManual("Buenos Aires")');
console.log('üîß Diagn√≥stico del geocoder completado.');
